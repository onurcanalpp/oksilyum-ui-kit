@use 'sass:math';

@import '_breakpoints.scss';

$grid-columns: 12;
// on the future can be reassigned.
$grid-padding: 12px !default;

.align-top {
    align-items: flex-start;
}

.align-center {
    align-items: center;
}

.align-bottom {
    align-items: flex-end;
}

.justify-left {
    justify-content: flex-start;
}

.justify-center {
    justify-content: center;
}

.justify-space-between {
    justify-content: space-between;
}

.justify-right {
    justify-content: flex-end;
}

// base layout classes
.container {
    width: 100%;
    max-width: 1200px; // default container with in web.
    margin: 0 auto;
    box-sizing: border-box;

    @include xl-down {
        padding: 0px 20px;
    }

    /*
    // TODO:: Research the most usable version of container.
    @include xl-down {
        max-width: 992px;
    }

    @include lg-down {
        max-width: 720px;
    }*/
}

.row {
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    margin-right: -$grid-padding;
    margin-left: -$grid-padding;
}

.col {
    box-sizing: border-box;
    flex-grow: 1;
    flex-basis: math.div(100%, $grid-columns);
    padding-left: $grid-padding;
    padding-right: $grid-padding;
}

.d-none {
    display: none;
}

.f-nowrap {
    flex-wrap: nowrap;
}

@for $i from 1 through $grid-columns {
    .col-#{$i} {
        box-sizing: border-box;
        flex-grow: 0;
        flex: 0 0 math.div($i * 100%, $grid-columns);
        padding-left: 12px;
        padding-right: 12px;
        max-width: math.div($i * 100%, $grid-columns);
    }
    .order-#{$i} {
        order: $i;
    }
}

@each $size, $min-width in $breakpoints {
    @media (max-width: #{$min-width}) {
        @for $i from 1 through $grid-columns {
            .col-#{$size}-#{$i} {
                box-sizing: border-box;
                flex-grow: 0;
                flex: 0 0 math.div($i * 100%, $grid-columns);
                max-width: math.div($i * 100%, $grid-columns);
                padding-left: $grid-padding;
                padding-right: $grid-padding;
            }
            .order-#{$size}-#{$i} {
                order: $i;
            }
        }

        .d-#{$size}-none {
            display: none;
        }

        .d-#{$size}-block {
            display: block;
        }
    }
}