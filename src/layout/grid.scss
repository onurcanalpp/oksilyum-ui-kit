@use 'sass:math';

@import '_breakpoints.scss';

/* Breakpoints */
// grid system
$grid-columns: 12;

// base layout classes
.container {
    width: 100%;
    max-width: 1200px; // default container with in web.
    margin: 0 auto;
    box-sizing: border-box;

    @include xl-down {
        padding: 0px 20px;
    }

    /*
    // TODO:: Research the most usable version of container.
    @include xl-down {
        max-width: 992px;
    }

    @include lg-down {
        max-width: 720px;
    }*/
    &.align-items-top {
        align-items: flex-start;
    }

    &.align-items-center {
        align-items: center;
    }

    &.align-items-bottom {
        align-items: flex-end;
    }

    &.justify-content-left {
        justify-content: flex-start;
    }

    &.justify-content-center {
        justify-content: center;
    }

    &.justify-content-space-between {
        justify-content: space-between;
    }

    &.justify-content-right {
        justify-content: flex-end;
    }
}

.row {
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
}

.col {
    box-sizing: border-box;
    flex-grow: 1;
    flex-basis: math.div(100%, $grid-columns); 
}

@for $i from 1 through $grid-columns {
    .col-#{$i} {
        box-sizing: border-box;
        flex-grow: 0;
        width: math.div($i * 100%, $grid-columns);
    }
}

// col classes
@include xxl-down {
    @for $i from 1 through $grid-columns {
        .col-xxl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xl-down {
    @for $i from 1 through $grid-columns {
        .col-xl-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include lg-down {
    @for $i from 1 through $grid-columns {
        .col-lg-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include md-down {
    @for $i from 1 through $grid-columns {
        .col-md-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm-down {
    @for $i from 1 through $grid-columns {
        .col-sm-#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
